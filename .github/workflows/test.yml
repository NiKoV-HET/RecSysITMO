name: Test
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

env:
  API_KEY: ${{secrets.API_KEY}}

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Setup python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install setuptools and wheel
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry run pip install setuptools wheel

      - name: Install lightfm
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry run pip install lightfm==1.17 --no-use-pep517

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install 
      
      - name: Fix nmslib for git CPU
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry run pip install --no-binary ":all:" nmslib

      - name: Run tests
        run: make lint

      - name: Run linters
        run: make test
